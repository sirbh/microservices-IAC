version: '3'
services:
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: knsach-rabbitmq-container
    ports:
      - "5672:5672"  # RabbitMQ default AMQP port
      - "15672:15672"  # RabbitMQ Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
      RABBITMQ_DEFAULT_VHOST: "/"
    networks:
      - knsach_network
    healthcheck:
        test: "rabbitmq-diagnostics -q ping"
        interval: 30s
        timeout: 10s
        retries: 5

  service1:
    image: knsach-service-1-img
    build:
      context: ./service-1/
      dockerfile: Dockerfile
    environment:
      - HOST=service2
      - RABBIT_MQ_HOST=rabbitmq
      - PORT=8000
    container_name: knsach-service-1-container
    depends_on:
      - service2
      - monitor
    networks:
      - knsach_network
    command: ["java", "-cp", "./target/service-1-1.0-SNAPSHOT-jar-with-dependencies.jar", "fi.tuni.App"]
  
  service2:
    image: knsach-service-2-img
    build:
      context: ./service-2/
      dockerfile: Dockerfile
    environment:
      - PORT=8000
      - RABBIT_MQ_HOST=rabbitmq
    # ports:
    #   - 3000:8000
    container_name: knsach-service-2-container
    networks:
      - knsach_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm start


  monitor:
    image: knsach-monitor-img
    build:
      context: ./monitor/
      dockerfile: Dockerfile
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - PORT=8087
    ports:
      - 8087:8087
    container_name: knsach-monitor-container
    networks:
      - knsach_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: node monitor.js   

  gateway:
    image: knsach-gateway-img
    build:
      context: ./gateway/
      dockerfile: Dockerfile
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - PORT=8080
    ports:
      - 8080:8080
    container_name: knsach-gateway-container
    networks:
      - knsach_network
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm start

networks:
  knsach_network: